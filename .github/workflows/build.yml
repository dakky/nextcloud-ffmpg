name: Build and Push Nextcloud with ffmpeg

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write    # needed to commit badge
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Nextcloud upstream version
        id: ncver
        run: |
          VERSION=$(docker run --rm nextcloud:apache /usr/src/nextcloud/occ --no-warnings status | grep -w versionstring | awk '{print $3}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if version already exists in GHCR
        id: check
        run: |
          if docker manifest inspect ghcr.io/${{ github.repository_owner }}/nextcloud-ffmpeg:${{ steps.ncver.outputs.version }} > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Stop if version already exists
        if: steps.check.outputs.exists == 'true'
        run: |
          echo "Image for version ${{ steps.ncver.outputs.version }} already exists. Skipping build."
          exit 0

      - name: Build and push image
        if: steps.check.outputs.exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/nextcloud-ffmpeg:latest
            ghcr.io/${{ github.repository_owner }}/nextcloud-ffmpeg:${{ steps.ncver.outputs.version }}

      - name: Generate last push badge JSON
        if: always()
        run: |
          mkdir -p .github/badges

          echo "Checking latest pushed tag..."
          LATEST_TAG=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://ghcr.io/v2/${{ github.repository_owner }}/nextcloud-ffmpeg/tags/list \
            | jq -r '.tags | map(select(. != "latest")) | sort | .[-1]')

          if [ -z "$LATEST_TAG" ]; then
            echo "⚠️ Could not find any tags"
            exit 0
          fi

          LATEST_TAG_DATE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://ghcr.io/v2/${{ github.repository_owner }}/nextcloud-ffmpeg/manifests/$LATEST_TAG \
            | jq -r '.history[0].v1Compatibility' | jq -r '.created')

          if [ -z "$LATEST_TAG_DATE" ]; then
            echo "⚠️ Could not fetch creation date"
            exit 0
          fi

          LATEST_DATE=$(date -d "$LATEST_TAG_DATE" +%s)
          NOW=$(date +%s)
          DAYS=$(( (NOW - LATEST_DATE) / 86400 ))

          if [ $DAYS -gt 30 ]; then
            COLOR="red"
          elif [ $DAYS -gt 14 ]; then
            COLOR="yellow"
          else
            COLOR="green"
          fi

          cat > .github/badges/lastpush.json <<EOF
          {
            "schemaVersion": 1,
            "label": "nextcloud",
            "message": "v$LATEST_TAG • ${DAYS} days ago",
            "color": "$COLOR"
          }
          EOF

      - name: Commit badge file
        if: always()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .github/badges/lastpush.json
          git commit -m "Update last push badge" || echo "No changes to commit"
          git push
